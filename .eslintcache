[{"/Users/weishuang/Desktop/project/shandl-ui/src/index.tsx":"1","/Users/weishuang/Desktop/project/shandl-ui/src/reportWebVitals.ts":"2","/Users/weishuang/Desktop/project/shandl-ui/src/App.tsx":"3","/Users/weishuang/Desktop/project/shandl-ui/src/components/Button/button.tsx":"4","/Users/weishuang/Desktop/project/shandl-ui/src/components/Alert/alert.tsx":"5","/Users/weishuang/Desktop/project/shandl-ui/src/components/Menu/menu.tsx":"6","/Users/weishuang/Desktop/project/shandl-ui/src/components/Menu/menuItem.tsx":"7","/Users/weishuang/Desktop/project/shandl-ui/src/components/Menu/subMenu.tsx":"8"},{"size":508,"mtime":1608090194000,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1607571594000,"results":"11","hashOfConfig":"10"},{"size":853,"mtime":1608546827000,"results":"12","hashOfConfig":"10"},{"size":1434,"mtime":1608187958000,"results":"13","hashOfConfig":"10"},{"size":1191,"mtime":1608198267000,"results":"14","hashOfConfig":"10"},{"size":2115,"mtime":1608546827000,"results":"15","hashOfConfig":"10"},{"size":928,"mtime":1608545529000,"results":"16","hashOfConfig":"10"},{"size":2183,"mtime":1608546827000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1hkx25j",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"/Users/weishuang/Desktop/project/shandl-ui/src/index.tsx",[],["36","37"],"/Users/weishuang/Desktop/project/shandl-ui/src/reportWebVitals.ts",[],"/Users/weishuang/Desktop/project/shandl-ui/src/App.tsx",["38","39","40","41","42"],"/Users/weishuang/Desktop/project/shandl-ui/src/components/Button/button.tsx",[],"/Users/weishuang/Desktop/project/shandl-ui/src/components/Alert/alert.tsx",[],"/Users/weishuang/Desktop/project/shandl-ui/src/components/Menu/menu.tsx",[],"/Users/weishuang/Desktop/project/shandl-ui/src/components/Menu/menuItem.tsx",[],"/Users/weishuang/Desktop/project/shandl-ui/src/components/Menu/subMenu.tsx",["43"],"import React, { MouseEvent, useContext, useState } from 'react'\nimport classNames from 'classnames'\nimport { MenuItemProps } from './menuItem'\nimport { MenuContext } from './menu'\n\ninterface SubMenuProps {\n  index?: string,\n  className?: string,\n  title: string\n}\n\nconst SubMenu: React.FC<SubMenuProps> = props => {\n  const { index, title, className, children } = props\n  const [ menuOpen, setMenuOpen ] = useState(false)\n  const context = useContext(MenuContext)\n  const handleClick = (e: MouseEvent) => {\n    e.preventDefault()\n    setMenuOpen(!menuOpen)\n  }\n  let timer\n  const handleMouse = (e: MouseEvent, toggle: boolean) => {\n    e.preventDefault()\n    timer = setTimeout(() => [\n      setMenuOpen(toggle)\n    ], 300)\n  }\n  const clickEvent = context.mode === 'vertical' ? {\n    onClick: handleClick\n  } : {}\n  const mouseEvent = context.mode !== 'vertical' ? {\n    onMouseEnter: (e: MouseEvent) => handleMouse(e, true),\n    onMouseLeave: (e: MouseEvent) => handleMouse(e, false)\n  } : {}\n  const classes = classNames('shandl-menuItem shandl-submenuItem', className, {\n    'shandl-menuItem-active': context.index === index\n  })\n  const subMenuClasses = classNames('shandl-submenu', {\n    'menu-opened': menuOpen\n  })\n  const renderChildren = () => {\n    const childrenComponent = React.Children.map(children, (child, i) => {\n      const childElement = child as React.FunctionComponentElement<MenuItemProps>\n      if(childElement.type.displayName === 'MenuItem'){\n        return React.cloneElement(childElement, {\n          index: `${index}-${i}`\n        })\n      } else {\n        console.log(\"Warning: SubMenu has a child which is not a MenuItem component\")\n      }\n    })\n    return (\n      <ul className={subMenuClasses}>\n        {childrenComponent}\n      </ul>\n    )\n  }\n  return (\n    <li key={index} className={classes} {...mouseEvent}>\n      <div className='submenu-title' {...clickEvent}>{title}</div>\n      {renderChildren()}\n    </li>\n  )\n}\n\nSubMenu.displayName = 'SubMenu'\n\nexport default SubMenu",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":14},{"ruleId":"48","severity":1,"message":"52","line":3,"column":18,"nodeType":"50","messageId":"51","endLine":3,"endColumn":28},{"ruleId":"48","severity":1,"message":"53","line":3,"column":30,"nodeType":"50","messageId":"51","endLine":3,"endColumn":40},{"ruleId":"48","severity":1,"message":"54","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":13},{"ruleId":"48","severity":1,"message":"55","line":4,"column":17,"nodeType":"50","messageId":"51","endLine":4,"endColumn":26},{"ruleId":"48","severity":1,"message":"56","line":23,"column":5,"nodeType":"50","messageId":"51","endLine":23,"endColumn":10},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'ButtonType' is defined but never used.","'ButtonSize' is defined but never used.","'Alert' is defined but never used.","'AlertType' is defined but never used.","'timer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]